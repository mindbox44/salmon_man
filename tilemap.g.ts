// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile2 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile3 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile4 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile10 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile11 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile9 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile12 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile5 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile6 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile13 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile14 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile7 = image.ofBuffer(hex``);

    helpers._registerFactory("tilemap", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level1":
            case "level1":return tiles.createTilemap(hex``, img`
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
`, [], -Infinity);
            case "level2":
            case "level2":return tiles.createTilemap(hex`30001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202020202020202020202000000000000000000000000000000000000000000000000000002020202020200000000000000000000000000000000000000000000000000000000000000000000000000000000000201010101010102020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000202020202020202020202020202020202020000000000000000000000000000050600000000000000000000000002020101010101010101010101010101010101010200000000000000000000000002020202020202020202020202020001010101010101010101010101010101010101010102020101010101010102020201010101010101010101010101010101010101010101010101010101010101010101010101010103030303030101010101010101010101010101070707070407070707070707070707070707070707070707070707070707070307070707070707070707070707070707070707070407040404040404040404040404040404040404040404040404040707070707070707070707070707070707070707070404040404040404040404040404040404040404040404040404040707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707070707`, img`
................................................
................................................
................................................
................................................
.........................22222222222............
..............222222............................
.............222222222..........................
................................................
.......222222222222222222.......................
.....222222222222222222222............2222222222
2222.2222222222222222222222222222222222222222222
22222222222222222222222222222.....22222222222222
2222.22222222222222222222222222.2222222222222222
2222.2.........................22222222222222222
2222...........................22222222222222222
222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile4,myTiles.tile1,myTiles.tile3,myTiles.tile11,myTiles.tile9,myTiles.tile12,myTiles.tile2], TileScale.Sixteen);
            case "level3":
            case "level3":return tiles.createTilemap(hex``, img`
................................................
................................................
.......................................22.......
................................................
................................................
...................222..2222...222..222222222222
...............222..................222222222222
..........222.......................222222222222
....................................222222222222
....................................222222222222
.....222............................222222222222
....................................222222222222
....................................222222222222
222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222
222222222222222222222222222222222222222222222222
`, [myTiles.transparency16,myTiles.tile5,myTiles.tile6,myTiles.tile13,myTiles.tile14,myTiles.tile7], TileScale.Sixteen);
        }
        return null;
    })

    helpers._registerFactory("tile", function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "transparency16":return transparency16;
            case "myTile":
            case "tile2":return tile2;
            case "myTile0":
            case "tile3":return tile3;
            case "myTile1":
            case "tile4":return tile4;
            case "tile1":return tile1;
            case "myTile4":
            case "tile10":return tile10;
            case "myTile5":
            case "tile11":return tile11;
            case "myTile3":
            case "tile9":return tile9;
            case "myTile6":
            case "tile12":return tile12;
            case "myTile7":
            case "tile5":return tile5;
            case "myTile8":
            case "tile6":return tile6;
            case "myTile10":
            case "tile13":return tile13;
            case "myTile11":
            case "tile14":return tile14;
            case "myTile2":
            case "tile7":return tile7;
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
